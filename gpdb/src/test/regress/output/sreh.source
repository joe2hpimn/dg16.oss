-- test single row error handling, both in COPY and external tables.
-- ###########################################################
-- COPY 
-- ###########################################################
CREATE TABLE sreh_copy(a int, b int, c int) distributed by(a);
-- 
-- ROW reject limit only
--
COPY sreh_copy FROM '@abs_srcdir@/data/bad_data1.data' DELIMITER '|' SEGMENT REJECT LIMIT 1000;
NOTICE:  Found 10 data formatting errors (10 or more input rows). Rejected related input data.
SELECT * FROM sreh_copy ORDER BY a,b,c;
 a  | b  | c  
----+----+----
  1 |  1 |  1
  5 |  5 |  5
  6 |  6 |  6
  9 |  9 |  9
 10 | 10 | 10
 14 | 14 | 14
(6 rows)

-- 
-- ROW reject limit only - low value that gets reached
--
COPY sreh_copy FROM '@abs_srcdir@/data/bad_data1.data' DELIMITER '|' SEGMENT REJECT LIMIT 2;
ERROR:  Segment reject limit reached. Aborting operation. Last error was: invalid input syntax for integer: "bad", column a
CONTEXT:  COPY sreh_copy, line 8, column a
SELECT * FROM sreh_copy ORDER BY a,b,c;
 a  | b  | c  
----+----+----
  1 |  1 |  1
  5 |  5 |  5
  6 |  6 |  6
  9 |  9 |  9
 10 | 10 | 10
 14 | 14 | 14
(6 rows)

-- 
-- error table (also testing that it gets automatically generated)
--
COPY sreh_copy FROM '@abs_srcdir@/data/bad_data1.data' DELIMITER '|' LOG ERRORS INTO sreh_copy_errtbl SEGMENT REJECT LIMIT 1000;
NOTICE:  Error table "sreh_copy_errtbl" does not exist. Auto generating an error table with the same name
WARNING:  The error table was created in the same transaction as this operation. It will get dropped if transaction rolls back even if bad rows are present
HINT:  To avoid this create the error table ahead of time using: CREATE TABLE <name> (cmdtime timestamp with time zone, relname text, filename text, linenum integer, bytenum integer, errmsg text, rawdata text, rawbytes bytea)
NOTICE:  Found 10 data formatting errors (10 or more input rows). Errors logged into error table "sreh_copy_errtbl"
SELECT * FROM sreh_copy ORDER BY a,b,c;
 a  | b  | c  
----+----+----
  1 |  1 |  1
  1 |  1 |  1
  5 |  5 |  5
  5 |  5 |  5
  6 |  6 |  6
  6 |  6 |  6
  9 |  9 |  9
  9 |  9 |  9
 10 | 10 | 10
 10 | 10 | 10
 14 | 14 | 14
 14 | 14 | 14
(12 rows)

SELECT relname,linenum,errmsg,rawdata FROM sreh_copy_errtbl ORDER BY linenum,rawdata,errmsg;
  relname  | linenum |                      errmsg                       | rawdata 
-----------+---------+---------------------------------------------------+---------
 sreh_copy |       2 | missing data for column "b"                       | 2
 sreh_copy |       3 | missing data for column "c"                       | 3|
 sreh_copy |       4 | extra data after last expected column             | 4|4|4|4
 sreh_copy |       7 | invalid input syntax for integer: "bad", column c | 7|7|bad
 sreh_copy |       8 | invalid input syntax for integer: "bad", column a | bad|8|8
 sreh_copy |      11 | missing data for column "b"                       | eleven
 sreh_copy |      12 | extra data after last expected column             | 12||||
 sreh_copy |      13 | missing data for column "c"                       | 13|,13,
 sreh_copy |      15 | missing data for column "b"                       | 15
 sreh_copy |      16 | missing data for column "b"                       | sixteen
(10 rows)

--
-- error table - do the same thing again. this time error table exists and should get reused and data appended
--
COPY sreh_copy FROM '@abs_srcdir@/data/bad_data1.data' DELIMITER '|' LOG ERRORS INTO sreh_copy_errtbl SEGMENT REJECT LIMIT 1000;
NOTICE:  Found 10 data formatting errors (10 or more input rows). Errors logged into error table "sreh_copy_errtbl"
SELECT * FROM sreh_copy ORDER BY a,b,c;
 a  | b  | c  
----+----+----
  1 |  1 |  1
  1 |  1 |  1
  1 |  1 |  1
  5 |  5 |  5
  5 |  5 |  5
  5 |  5 |  5
  6 |  6 |  6
  6 |  6 |  6
  6 |  6 |  6
  9 |  9 |  9
  9 |  9 |  9
  9 |  9 |  9
 10 | 10 | 10
 10 | 10 | 10
 10 | 10 | 10
 14 | 14 | 14
 14 | 14 | 14
 14 | 14 | 14
(18 rows)

SELECT relname,linenum,errmsg,rawdata FROM sreh_copy_errtbl ORDER BY linenum,rawdata,errmsg;
  relname  | linenum |                      errmsg                       | rawdata 
-----------+---------+---------------------------------------------------+---------
 sreh_copy |       2 | missing data for column "b"                       | 2
 sreh_copy |       2 | missing data for column "b"                       | 2
 sreh_copy |       3 | missing data for column "c"                       | 3|
 sreh_copy |       3 | missing data for column "c"                       | 3|
 sreh_copy |       4 | extra data after last expected column             | 4|4|4|4
 sreh_copy |       4 | extra data after last expected column             | 4|4|4|4
 sreh_copy |       7 | invalid input syntax for integer: "bad", column c | 7|7|bad
 sreh_copy |       7 | invalid input syntax for integer: "bad", column c | 7|7|bad
 sreh_copy |       8 | invalid input syntax for integer: "bad", column a | bad|8|8
 sreh_copy |       8 | invalid input syntax for integer: "bad", column a | bad|8|8
 sreh_copy |      11 | missing data for column "b"                       | eleven
 sreh_copy |      11 | missing data for column "b"                       | eleven
 sreh_copy |      12 | extra data after last expected column             | 12||||
 sreh_copy |      12 | extra data after last expected column             | 12||||
 sreh_copy |      13 | missing data for column "c"                       | 13|,13,
 sreh_copy |      13 | missing data for column "c"                       | 13|,13,
 sreh_copy |      15 | missing data for column "b"                       | 15
 sreh_copy |      15 | missing data for column "b"                       | 15
 sreh_copy |      16 | missing data for column "b"                       | sixteen
 sreh_copy |      16 | missing data for column "b"                       | sixteen
(20 rows)

--
-- error table - do the same thing again. this time use data from STDIN (should show in errtable)
--
COPY sreh_copy FROM STDIN DELIMITER '|' LOG ERRORS INTO sreh_copy_errtbl SEGMENT REJECT LIMIT 1000;
NOTICE:  Found 2 data formatting errors (2 or more input rows). Errors logged into error table "sreh_copy_errtbl"
SELECT * FROM sreh_copy ORDER BY a,b,c;
  a  |  b  |  c  
-----+-----+-----
   1 |   1 |   1
   1 |   1 |   1
   1 |   1 |   1
   5 |   5 |   5
   5 |   5 |   5
   5 |   5 |   5
   6 |   6 |   6
   6 |   6 |   6
   6 |   6 |   6
   9 |   9 |   9
   9 |   9 |   9
   9 |   9 |   9
  10 |  10 |  10
  10 |  10 |  10
  10 |  10 |  10
  14 |  14 |  14
  14 |  14 |  14
  14 |  14 |  14
 100 | 100 | 100
 300 | 300 | 300
(20 rows)

SELECT relname,linenum,errmsg,rawdata FROM sreh_copy_errtbl ORDER BY linenum,rawdata,errmsg;
  relname  | linenum |                                 errmsg                                  |              rawdata              
-----------+---------+-------------------------------------------------------------------------+-----------------------------------
 sreh_copy |       2 | missing data for column "b"                                             | 2
 sreh_copy |       2 | missing data for column "b"                                             | 2
 sreh_copy |       2 | missing data for column "b"                                             | 200 bad data from stdin
 sreh_copy |       3 | missing data for column "c"                                             | 3|
 sreh_copy |       3 | missing data for column "c"                                             | 3|
 sreh_copy |       4 | extra data after last expected column                                   | 4|4|4|4
 sreh_copy |       4 | extra data after last expected column                                   | 4|4|4|4
 sreh_copy |       4 | invalid input syntax for integer: " more bad data from stdin", column c | 500|500| more bad data from stdin
 sreh_copy |       7 | invalid input syntax for integer: "bad", column c                       | 7|7|bad
 sreh_copy |       7 | invalid input syntax for integer: "bad", column c                       | 7|7|bad
 sreh_copy |       8 | invalid input syntax for integer: "bad", column a                       | bad|8|8
 sreh_copy |       8 | invalid input syntax for integer: "bad", column a                       | bad|8|8
 sreh_copy |      11 | missing data for column "b"                                             | eleven
 sreh_copy |      11 | missing data for column "b"                                             | eleven
 sreh_copy |      12 | extra data after last expected column                                   | 12||||
 sreh_copy |      12 | extra data after last expected column                                   | 12||||
 sreh_copy |      13 | missing data for column "c"                                             | 13|,13,
 sreh_copy |      13 | missing data for column "c"                                             | 13|,13,
 sreh_copy |      15 | missing data for column "b"                                             | 15
 sreh_copy |      15 | missing data for column "b"                                             | 15
 sreh_copy |      16 | missing data for column "b"                                             | sixteen
 sreh_copy |      16 | missing data for column "b"                                             | sixteen
(22 rows)

--
-- # different errors depending on dispatch timings (missing data vs
-- # invalid input syntax)
--
-- start_matchsubs
--
-- m/ERROR\:\s+Segment reject limit reached\.\s+Aborting operation\.\s+Last error was\:\s+(missing data for column|invalid input syntax for integer)/
-- s/Last error was\:(.*)/Last error was: MISSING_DATA_OR_INVALID_INPUT_SYNTAX_FOR_INTEGER/
--
-- m/CONTEXT\:\s+COPY sreh_copy\,\s+line/
-- s/line \d+(.*)/line SOME_LINE/
--
-- end_matchsubs
--
-- error table - have low reject limit that gets reached, and see that data rolled back from target table and appended to err table
--
COPY sreh_copy FROM '@abs_srcdir@/data/bad_data1.data' DELIMITER '|' LOG ERRORS INTO sreh_copy_errtbl SEGMENT REJECT LIMIT 2;
ERROR:  Segment reject limit reached. Aborting operation. Last error was: missing data for column "c"  (seg0 @hostname@:11001 pid=68456)
CONTEXT:  COPY sreh_copy, line 3: "3|"
SELECT * FROM sreh_copy ORDER BY a,b,c;
  a  |  b  |  c  
-----+-----+-----
   1 |   1 |   1
   1 |   1 |   1
   1 |   1 |   1
   5 |   5 |   5
   5 |   5 |   5
   5 |   5 |   5
   6 |   6 |   6
   6 |   6 |   6
   6 |   6 |   6
   9 |   9 |   9
   9 |   9 |   9
   9 |   9 |   9
  10 |  10 |  10
  10 |  10 |  10
  10 |  10 |  10
  14 |  14 |  14
  14 |  14 |  14
  14 |  14 |  14
 100 | 100 | 100
 300 | 300 | 300
(20 rows)

-- the error table will have different count of rows in different
-- array configurations, as there's a chance that arrays with more
-- segdbs recorded more bad rows before one of the segments reached
-- the reject limit. Our only way to make sure data was indeed
-- appended at ABORT is to count the number of distinct inserts into
-- the error table. this is the 4th one, so must be 4.
SELECT count(distinct(cmdtime)) FROM sreh_copy_errtbl;
 count 
-------
     4
(1 row)

--
-- autodrop - error table auto-dropped when auto created and no bad data
--
DROP TABLE sreh_copy_errtbl; 
COPY sreh_copy FROM STDIN DELIMITER '|' LOG ERRORS INTO sreh_copy_errtbl SEGMENT REJECT LIMIT 1000;
NOTICE:  Error table "sreh_copy_errtbl" does not exist. Auto generating an error table with the same name
WARNING:  The error table was created in the same transaction as this operation. It will get dropped if transaction rolls back even if bad rows are present
HINT:  To avoid this create the error table ahead of time using: CREATE TABLE <name> (cmdtime timestamp with time zone, relname text, filename text, linenum integer, bytenum integer, errmsg text, rawdata text, rawbytes bytea)
NOTICE:  Dropping the auto-generated unused error table
HINT:  Use KEEP in LOG INTO clause to force keeping the error table alive
SELECT * FROM sreh_copy_errtbl; -- it should not exist
ERROR:  relation "sreh_copy_errtbl" does not exist
LINE 1: SELECT * FROM sreh_copy_errtbl;
                      ^
--
-- autodrop - error table not auto-dropped when KEEP specified
--
COPY sreh_copy FROM STDIN DELIMITER '|' LOG ERRORS INTO sreh_copy_errtbl KEEP SEGMENT REJECT LIMIT 1000;
NOTICE:  Error table "sreh_copy_errtbl" does not exist. Auto generating an error table with the same name
WARNING:  The error table was created in the same transaction as this operation. It will get dropped if transaction rolls back even if bad rows are present
HINT:  To avoid this create the error table ahead of time using: CREATE TABLE <name> (cmdtime timestamp with time zone, relname text, filename text, linenum integer, bytenum integer, errmsg text, rawdata text, rawbytes bytea)
SELECT * FROM sreh_copy_errtbl; -- should exist and be empty
 cmdtime | relname | filename | linenum | bytenum | errmsg | rawdata | rawbytes 
---------+---------+----------+---------+---------+--------+---------+----------
(0 rows)

--
-- autodrop - error table not auto-dropped when it wasn't auto generated, even if no bad data
--
COPY sreh_copy FROM STDIN DELIMITER '|' LOG ERRORS INTO sreh_copy_errtbl SEGMENT REJECT LIMIT 1000;
SELECT * FROM sreh_copy_errtbl; -- should exist and be empty
 cmdtime | relname | filename | linenum | bytenum | errmsg | rawdata | rawbytes 
---------+---------+----------+---------+---------+--------+---------+----------
(0 rows)

--
-- autodrop - error table not auto-dropped when there is bad data, even if auto-generated
--
DROP TABLE sreh_copy_errtbl; 
COPY sreh_copy FROM STDIN DELIMITER '|' LOG ERRORS INTO sreh_copy_errtbl SEGMENT REJECT LIMIT 1000;
NOTICE:  Error table "sreh_copy_errtbl" does not exist. Auto generating an error table with the same name
WARNING:  The error table was created in the same transaction as this operation. It will get dropped if transaction rolls back even if bad rows are present
HINT:  To avoid this create the error table ahead of time using: CREATE TABLE <name> (cmdtime timestamp with time zone, relname text, filename text, linenum integer, bytenum integer, errmsg text, rawdata text, rawbytes bytea)
NOTICE:  Found 1 data formatting errors (1 or more input rows). Errors logged into error table "sreh_copy_errtbl"
SELECT rawdata FROM sreh_copy_errtbl; -- should exist and have 1 row
 rawdata 
---------
 1|bad|1
(1 row)

--
-- constraint errors - data is rolled back from target table (CHECK)
--
TRUNCATE sreh_copy_errtbl;
CREATE TABLE sreh_constr(a int check (a > 10));
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
COPY sreh_constr FROM STDIN DELIMITER '|' LOG ERRORS INTO sreh_copy_errtbl KEEP SEGMENT REJECT LIMIT 1000;
ERROR:  new row for relation "sreh_constr" violates check constraint "sreh_constr_a_check"  (seg0 @hostname@:11001 pid=68456)
CONTEXT:  COPY sreh_constr, line 5: "9"
SELECT COUNT(*) FROM sreh_copy_errtbl; -- should exist and have 1 bad format row
 count 
-------
     1
(1 row)

SELECT * FROM sreh_constr; -- should exist and be empty
 a 
---
(0 rows)

DROP TABLE sreh_constr;
--
-- constraint errors - data is rolled back from target table (UNIQUE)
--
TRUNCATE sreh_copy_errtbl;
CREATE TABLE sreh_constr(a int unique);
NOTICE:  CREATE TABLE / UNIQUE will create implicit index "sreh_constr_a_key" for table "sreh_constr"
COPY sreh_constr FROM STDIN DELIMITER '|' LOG ERRORS INTO sreh_copy_errtbl KEEP SEGMENT REJECT LIMIT 1000;
ERROR:  duplicate key violates unique constraint "sreh_constr_a_key"  (seg0 @hostname@:11001 pid=68456)
CONTEXT:  COPY sreh_constr, line 5: "9"
SELECT COUNT(*) FROM sreh_copy_errtbl; -- should exist and have 1 bad format row
 count 
-------
     1
(1 row)

SELECT * FROM sreh_constr; -- should exist and be empty
 a 
---
(0 rows)

--
-- test PERCENT reject limit logic with threshold 100.
-- (we don't test the default threshold (300) yet. we could if needed).
-- bad records in bad_data3.data (300 rows): 5,15,55,56,107,136,160,213,214,286
-- this data file is made with errors that will occur only on the QD (with COPY)
-- so the percent calculation should always be the same regardless of number of
-- QE's in the system.
--
set gp_reject_percent_threshold = 100;
COPY sreh_copy FROM '@abs_srcdir@/data/bad_data3.data' DELIMITER '|' SEGMENT REJECT LIMIT 10 PERCENT; --pass
NOTICE:  Found 9 data formatting errors (9 or more input rows). Rejected related input data.
COPY sreh_copy FROM '@abs_srcdir@/data/bad_data3.data' DELIMITER '|' SEGMENT REJECT LIMIT 2 PERCENT; --fail
ERROR:  Segment reject limit reached. Aborting operation. Last error was: invalid input syntax for integer: "BAD", column a
CONTEXT:  COPY sreh_copy, line 107, column a
--
-- test PERCENT reject limit logic with custom threshold 10 (only practical for test purposes)
--
set gp_reject_percent_threshold = 10;
COPY sreh_copy FROM '@abs_srcdir@/data/bad_data3.data' DELIMITER '|' SEGMENT REJECT LIMIT 10 PERCENT; --fail
ERROR:  Segment reject limit reached. Aborting operation. Last error was: invalid input syntax for integer: "BAD", column a
CONTEXT:  COPY sreh_copy, line 15, column a
COPY sreh_copy FROM '@abs_srcdir@/data/bad_data3.data' DELIMITER '|' SEGMENT REJECT LIMIT 20 PERCENT; --pass
NOTICE:  Found 9 data formatting errors (9 or more input rows). Rejected related input data.
-- MPP-2933 (multiple dist-key attr conversion errors)
create table t2933 (col1 varchar(3) NULL , col2 char(1) NULL, col3 varchar(4) NULL, col4 char(1) NULL, col5 varchar(20) NULL) 
Distributed By (col1, col2, col3, col4);
COPY t2933 FROM STDIN DELIMITER '|' SEGMENT REJECT LIMIT 10;
NOTICE:  Found 1 data formatting errors (1 or more input rows). Rejected related input data.
-- cleanup
DROP TABLE sreh_copy;
DROP TABLE sreh_constr;
DROP TABLE sreh_copy_errtbl;
-- ###########################################################
-- External Tables 
-- ###########################################################
CREATE EXTERNAL WEB TABLE gpfdist_sreh_start (x text)
execute E'((@bindir@/gpfdist -p 8080 -d @abs_srcdir@/data  </dev/null >/dev/null 2>&1 &); sleep 7; echo "starting...") '
on SEGMENT 0
FORMAT 'text' (delimiter '|');
CREATE EXTERNAL WEB TABLE gpfdist_sreh_stop (x text)
execute E'(/bin/pkill gpfdist || killall gpfdist) > /dev/null 2>&1; echo "stopping..."'
on SEGMENT 0
FORMAT 'text' (delimiter '|');
select * from gpfdist_sreh_stop;
      x      
-------------
 stopping...
(1 row)

select * from gpfdist_sreh_start;
      x      
-------------
 starting...
(1 row)

-- create a target table to load into
CREATE TABLE sreh_target(a int, b int, c int) distributed by(a);
-- 
-- reject limit only
--
CREATE EXTERNAL TABLE sreh_ext(a int, b int, c int)
LOCATION ('gpfdist://@hostname@:8080/bad_data1.data' )
FORMAT 'text' (delimiter '|')
SEGMENT REJECT LIMIT 10000;
SELECT * FROM sreh_ext;
NOTICE:  Found 10 data formatting errors (10 or more input rows). Rejected related input data.
 a  | b  | c  
----+----+----
  1 |  1 |  1
  5 |  5 |  5
  6 |  6 |  6
  9 |  9 |  9
 10 | 10 | 10
 14 | 14 | 14
(6 rows)

INSERT INTO sreh_target SELECT * FROM sreh_ext;
NOTICE:  Found 10 data formatting errors (10 or more input rows). Rejected related input data.
SELECT count(*) FROM sreh_target;
 count 
-------
     6
(1 row)

TRUNCATE sreh_target;
DROP EXTERNAL TABLE sreh_ext;
-- 
-- reject limit only - low value that gets reached
--
CREATE EXTERNAL TABLE sreh_ext(a int, b int, c int)
LOCATION ('gpfdist://@hostname@:8080/bad_data1.data' )
FORMAT 'text' (delimiter '|')
SEGMENT REJECT LIMIT 2;
SELECT * FROM sreh_ext ORDER BY a;
ERROR:  Segment reject limit reached. Aborting operation. Last error was: missing data for column "c"  (seg1 slice1 @hostname@:11002 pid=68457)
DETAIL:  External table sreh_ext, line 3 of gpfdist://@hostname@:8080/bad_data1.data: "3|"
INSERT INTO sreh_target SELECT * FROM sreh_ext;
ERROR:  Segment reject limit reached. Aborting operation. Last error was: missing data for column "c"  (seg1 slice1 @hostname@:11002 pid=68459)
DETAIL:  External table sreh_ext, line 3 of gpfdist://@hostname@:8080/bad_data1.data: "3|"
SELECT count(*) FROM sreh_target;
 count 
-------
     0
(1 row)

TRUNCATE sreh_target;
DROP EXTERNAL TABLE sreh_ext;
-- 
-- error table (also testing that it gets automatically generated)
--
CREATE EXTERNAL TABLE sreh_ext(a int, b int, c int)
LOCATION ('gpfdist://@hostname@:8080/bad_data1.data' )
FORMAT 'text' (delimiter '|')
LOG ERRORS INTO sreh_ext_errtbl
SEGMENT REJECT LIMIT 1000;
NOTICE:  Error table "sreh_ext_errtbl" does not exist. Auto generating an error table with the same name
SELECT * FROM sreh_ext ORDER BY a;
NOTICE:  Found 10 data formatting errors (10 or more input rows). Rejected related input data.
 a  | b  | c  
----+----+----
  1 |  1 |  1
  5 |  5 |  5
  6 |  6 |  6
  9 |  9 |  9
 10 | 10 | 10
 14 | 14 | 14
(6 rows)

SELECT relname,errmsg,rawdata FROM sreh_ext_errtbl ORDER BY errmsg,rawdata;
 relname  |                      errmsg                       | rawdata 
----------+---------------------------------------------------+---------
 sreh_ext | extra data after last expected column             | 12||||
 sreh_ext | extra data after last expected column             | 4|4|4|4
 sreh_ext | invalid input syntax for integer: "bad", column a | bad|8|8
 sreh_ext | invalid input syntax for integer: "bad", column c | 7|7|bad
 sreh_ext | missing data for column "b"                       | 15
 sreh_ext | missing data for column "b"                       | 2
 sreh_ext | missing data for column "b"                       | eleven
 sreh_ext | missing data for column "b"                       | sixteen
 sreh_ext | missing data for column "c"                       | 13|,13,
 sreh_ext | missing data for column "c"                       | 3|
(10 rows)

TRUNCATE sreh_ext_errtbl;
INSERT INTO sreh_target SELECT * FROM sreh_ext;
NOTICE:  Found 10 data formatting errors (10 or more input rows). Rejected related input data.
SELECT count(*) FROM sreh_target;
 count 
-------
     6
(1 row)

SELECT relname,errmsg,rawdata FROM sreh_ext_errtbl ORDER BY errmsg,rawdata;
 relname  |                      errmsg                       | rawdata 
----------+---------------------------------------------------+---------
 sreh_ext | extra data after last expected column             | 12||||
 sreh_ext | extra data after last expected column             | 4|4|4|4
 sreh_ext | invalid input syntax for integer: "bad", column a | bad|8|8
 sreh_ext | invalid input syntax for integer: "bad", column c | 7|7|bad
 sreh_ext | missing data for column "b"                       | 15
 sreh_ext | missing data for column "b"                       | 2
 sreh_ext | missing data for column "b"                       | eleven
 sreh_ext | missing data for column "b"                       | sixteen
 sreh_ext | missing data for column "c"                       | 13|,13,
 sreh_ext | missing data for column "c"                       | 3|
(10 rows)

TRUNCATE sreh_ext_errtbl;
TRUNCATE sreh_target;
DROP EXTERNAL TABLE sreh_ext;
--
-- error table - do the same thing again. this time error table exists and should get reused
--
CREATE EXTERNAL TABLE sreh_ext(a int, b int, c int)
LOCATION ('gpfdist://@hostname@:8080/bad_data1.data' )
FORMAT 'text' (delimiter '|')
LOG ERRORS INTO sreh_ext_errtbl
SEGMENT REJECT LIMIT 1000;
SELECT * FROM sreh_ext ORDER BY a;
NOTICE:  Found 10 data formatting errors (10 or more input rows). Rejected related input data.
 a  | b  | c  
----+----+----
  1 |  1 |  1
  5 |  5 |  5
  6 |  6 |  6
  9 |  9 |  9
 10 | 10 | 10
 14 | 14 | 14
(6 rows)

SELECT relname,errmsg,rawdata FROM sreh_ext_errtbl ORDER BY errmsg,rawdata;
 relname  |                      errmsg                       | rawdata 
----------+---------------------------------------------------+---------
 sreh_ext | extra data after last expected column             | 12||||
 sreh_ext | extra data after last expected column             | 4|4|4|4
 sreh_ext | invalid input syntax for integer: "bad", column a | bad|8|8
 sreh_ext | invalid input syntax for integer: "bad", column c | 7|7|bad
 sreh_ext | missing data for column "b"                       | 15
 sreh_ext | missing data for column "b"                       | 2
 sreh_ext | missing data for column "b"                       | eleven
 sreh_ext | missing data for column "b"                       | sixteen
 sreh_ext | missing data for column "c"                       | 13|,13,
 sreh_ext | missing data for column "c"                       | 3|
(10 rows)

TRUNCATE sreh_ext_errtbl;
INSERT INTO sreh_target SELECT * FROM sreh_ext;
NOTICE:  Found 10 data formatting errors (10 or more input rows). Rejected related input data.
SELECT count(*) FROM sreh_target;
 count 
-------
     6
(1 row)

SELECT relname,errmsg,rawdata FROM sreh_ext_errtbl ORDER BY errmsg,rawdata;
 relname  |                      errmsg                       | rawdata 
----------+---------------------------------------------------+---------
 sreh_ext | extra data after last expected column             | 12||||
 sreh_ext | extra data after last expected column             | 4|4|4|4
 sreh_ext | invalid input syntax for integer: "bad", column a | bad|8|8
 sreh_ext | invalid input syntax for integer: "bad", column c | 7|7|bad
 sreh_ext | missing data for column "b"                       | 15
 sreh_ext | missing data for column "b"                       | 2
 sreh_ext | missing data for column "b"                       | eleven
 sreh_ext | missing data for column "b"                       | sixteen
 sreh_ext | missing data for column "c"                       | 13|,13,
 sreh_ext | missing data for column "c"                       | 3|
(10 rows)

TRUNCATE sreh_target;
TRUNCATE sreh_ext_errtbl;
DROP EXTERNAL TABLE sreh_ext;
--
-- constraint errors - data is rolled back from both target and error tables (CHECK)
--
CREATE TABLE sreh_constr(a int, b int, c int check (c < 10));
NOTICE:  Table doesn't have 'DISTRIBUTED BY' clause -- Using column named 'a' as the Greenplum Database data distribution key for this table.
HINT:  The 'DISTRIBUTED BY' clause determines the distribution of data. Make sure column(s) chosen are the optimal data distribution key to minimize skew.
CREATE EXTERNAL TABLE sreh_ext(a int, b int, c int)
LOCATION ('gpfdist://@hostname@:8080/bad_data1.data' )
FORMAT 'text' (delimiter '|')
LOG ERRORS INTO sreh_ext_errtbl
SEGMENT REJECT LIMIT 1000;
INSERT INTO sreh_constr SELECT * FROM sreh_ext;
NOTICE:  Found 10 data formatting errors (10 or more input rows). Rejected related input data.
ERROR:  new row for relation "sreh_constr" violates check constraint "sreh_constr_c_check"  (seg1 @hostname@:11002 pid=68457)
SELECT COUNT(*) FROM sreh_ext_errtbl; -- should be empty
 count 
-------
    10
(1 row)

SELECT COUNT(*) FROM sreh_constr; -- should be empty
 count 
-------
     0
(1 row)

--
-- test PERCENT reject limit logic with threshold 100.
-- (we don't test the default threshold (300) yet. we could if needed).
-- bad records in bad_data3.data (300 rows): 5,15,55,56,107,136,160,213,214,286
-- in here we assume that gpfdist will distribute all the data to one QE (since
-- it is much smaller than the data buffer it uses) so the percent calculation 
-- should always be the same regardless of number of QE's in the system.
--
set gp_reject_percent_threshold = 100;
CREATE EXTERNAL TABLE sreh_ext_10percent(a int, b int, c int)
LOCATION ('gpfdist://@hostname@:8080/bad_data3.data' )
FORMAT 'text' (delimiter '|')
SEGMENT REJECT LIMIT 10 PERCENT;
SELECT count(*) FROM sreh_ext_10percent; -- pass
NOTICE:  Found 9 data formatting errors (9 or more input rows). Rejected related input data.
 count 
-------
   291
(1 row)

CREATE EXTERNAL TABLE sreh_ext_2percent(a int, b int, c int)
LOCATION ('gpfdist://@hostname@:8080/bad_data3.data' )
FORMAT 'text' (delimiter '|')
SEGMENT REJECT LIMIT 2 PERCENT;
SELECT count(*) FROM sreh_ext_2percent; -- fail
ERROR:  Segment reject limit reached. Aborting operation. Last error was: invalid input syntax for integer: "BAD", column a  (seg0 slice1 @hostname@:11001 pid=68456)
DETAIL:  External table sreh_ext_2percent, line 107 of gpfdist://@hostname@:8080/bad_data3.data, column a
--
-- test PERCENT reject limit logic with custom threshold 10 (only practical for test purposes)
--
set gp_reject_percent_threshold = 10;
SELECT count(*) FROM sreh_ext_10percent; -- fail
ERROR:  Segment reject limit reached. Aborting operation. Last error was: invalid input syntax for integer: "BAD", column a  (seg0 slice1 @hostname@:11001 pid=68456)
DETAIL:  External table sreh_ext_10percent, line 15 of gpfdist://@hostname@:8080/bad_data3.data, column a
CREATE EXTERNAL TABLE sreh_ext_20percent(a int, b int, c int)
LOCATION ('gpfdist://@hostname@:8080/bad_data3.data' )
FORMAT 'text' (delimiter '|')
SEGMENT REJECT LIMIT 20 PERCENT;
SELECT count(*) FROM sreh_ext_20percent; -- pass
NOTICE:  Found 9 data formatting errors (9 or more input rows). Rejected related input data.
 count 
-------
   291
(1 row)

set gp_reject_percent_threshold = 300; -- reset
-- cleanup
select * from gpfdist_sreh_stop;
      x      
-------------
 stopping...
(1 row)

DROP EXTERNAL WEB TABLE gpfdist_sreh_stop;
DROP EXTERNAL WEB TABLE gpfdist_sreh_start;
DROP EXTERNAL TABLE sreh_ext_2percent;
DROP EXTERNAL TABLE sreh_ext_10percent;
DROP EXTERNAL TABLE sreh_ext_20percent;
DROP TABLE sreh_target;
DROP TABLE sreh_ext_errtbl; -- should fail by dependency
NOTICE:  external table sreh_ext depends on table sreh_ext_errtbl
ERROR:  cannot drop table sreh_ext_errtbl because other objects depend on it
HINT:  Use DROP ... CASCADE to drop the dependent objects too.
DROP TABLE sreh_ext_errtbl CASCADE;
NOTICE:  drop cascades to external table sreh_ext
