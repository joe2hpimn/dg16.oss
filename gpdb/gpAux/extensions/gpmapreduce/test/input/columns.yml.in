%YAML 1.1
---  
VERSION:   1.0.0.1
USER:      @db_user@

DEFINE:
  - INPUT:
      NAME:      weblog
      FILE:
        - @hostname@:@abs_srcdir@/data/access_log
        - @hostname@:@abs_srcdir@/data/access_log2
      COLUMNS:
        - ip       text
        - rfc      text
        - uname    text
        - date     text
        - timezone text
        - method   text
        - url      text
        - protocol text
        - status   integer
        - bytes    integer
      DELIMITER: ' '
        
  - MAP:
      NAME:     myMap
      LANGUAGE: perl
      PARAMETERS:
        - key text
        - ip text
        - url text
      RETURNS:
        - ip text
        - url text
        - value integer
      FUNCTION: |
        my ($key, $ip, $url) = @_;
        return [] unless ($url =~ m/$key/);
        return [{"ip" => $ip, "url" => $url, "value" => 1}]
        
# myReduce is exactly the same as SUM except for the grouping keys and
# the non-null initialization.
  - REDUCE:
      NAME:        myReduce
      INITIALIZE:  '0'
      TRANSITION:  int4_sum
      CONSOLIDATE: int8pl
      KEYS:        [ip]

  - OUTPUT:
      NAME:     out_1
      FILE:     @abs_srcdir@/output/columns.1
      DELIMITER: '|'
      MODE:     REPLACE

  - OUTPUT:
      NAME:     out_2
      FILE:     @abs_srcdir@/output/columns.1
      DELIMITER: '|'
      MODE:     APPEND
      
EXECUTE:

# built in SUM groups by all columns not "value" 
  - RUN:
     SOURCE:   weblog
     MAP:      myMap
     REDUCE:   SUM
     TARGET:   out_1

# myReduce is defined with "keys" specified as just the "ip" column     
  - RUN:
     SOURCE:   weblog
     MAP:      myMap
     REDUCE:   myReduce
     TARGET:   out_2