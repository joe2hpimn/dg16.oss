# ----------
# The first group of parallel test
# $PostgreSQL: pgsql/src/test/regress/parallel_schedule,v 1.35 2006/08/30 23:34:22 tgl Exp $
# ----------
test: boolean char name varchar text int2 int4 int8 oid float4 float8 bit numeric

# Depends on things setup during char, varchar and text
test: strings
# Depends on int2, int4, int8, float4, float8
test: numerology

# ----------
# The second group of parallel test
# ----------
test: point lseg box path polygon circle date time timetz timestamp timestamptz interval abstime reltime tinterval inet comments oidjoins type_sanity opr_sanity

# Depends on point, lseg, box, path, polygon and circle
test: geometry
# Depends on interval, timetz, timestamp, timestamptz, reltime and abstime
test: horology

# ----------
# These four each depend on the previous one
# ----------
test: insert
test: create_function_1
test: create_type
test: create_table
test: create_function_2

# ----------
# Load huge amounts of data
# We should split the data files into single files and then
# execute two copy tests parallel, to check that copy itself
# is concurrent safe.
# ----------
test: copy copyselect

# ----------
# The third group of parallel test
# ----------
test: constraints create_misc create_aggregate create_operator vacuum drop_if_exists

# 'inherit' test is disabled in GPDB. FIXME: why?
#test: inherit

# 'triggers' test is disabled in GPDB, because it contains a trigger function
# that would need to access rows on other segments, which doens't work. You
# get errors like:
# ERROR: function cannot execute on segment because it accesses relation "public.pkeys"
#test: triggers

# Depends on the above
test: create_index create_view

# ----------
# sanity_check does a vacuum, affecting the sort order of SELECT *
# results. So it should not run parallel to other tests.
#
# Disabled in GPDB. FIXME: why?
# ----------
#test: sanity_check

# ----------
# Believe it or not, select creates a table, subsequent
# tests need.
# ----------
test: errors
test: select
ignore: random

# ----------
# The fourth group of parallel test
# ----------
test: select_into select_distinct select_distinct_on select_implicit select_having subselect union case join aggregates random portals arrays btree_index hash_index update delete

# In PostgreSQL, namespace test is run as part of the fourth group, but there
# are some GPDB additions in it that will show diff if concurrent tests use
# temporary tables. So run it separately.
test: namespace

# 2-phase commit is not supported by GPDB.
#test: prepared_xacts

# The 'transactions' test is disabled in GPDB, because it uses functions
# in segments in a way that doesn't work:
# ERROR:  function cannot execute on segment because it accesses relation "public.xacttest"
#test: transactions

test: privileges
test: misc

# ----------
# The fifth group of parallel test
# ----------
test: select_views portals_p2 cluster dependency guc

# 'rules' test is disabled in GPDB. Maintaining the list of views in it is
# too painful, and there are also errors because of cross-segment UPDATEs
# and functions.
#test: rules

# Output of the 'combocid' test contains ctid and cmin values, which will
# differ depending on how many segments are used. Hence disabled in GPDB.
#test: combocid

# 'foreign_key' test is disabled, because it contains several tables with
# multiple UNIQUE constraints, which is not supported in GPDB.
#test: foreign_key

# ----------
# The sixth group of parallel test
# ----------
# "plpgsql" cannot run concurrently with "rules"
#
test: limit copy2 temp domain rangefuncs prepare without_oid conversion truncate alter_table sequence polymorphism rowtypes

# 'plpgsql' test is disabled in GPDB, because it produces a lot of errors on
# because of cross-segment accesses in functions.
#test: plpgsql

# INSERT RETURNING is not supported by GPDB
#test: returning

# run stats by itself because its delay may be insufficient under heavy load
#
# 'stats' test has been disabled in GPDB, because it tries to set stats-related
# GUCs stats_block_level and stats_row_level, which have been removed from
# GPDB.
#test: stats

# run tablespace by itself
# Disabled because tablespaces live in filespaces in GPDB, so the syntax
# is quite different.
#test: tablespace
