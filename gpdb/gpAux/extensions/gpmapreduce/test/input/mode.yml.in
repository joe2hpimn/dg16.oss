---  # in perl
VERSION: 1.0.0.1

DEFINE:
  - INPUT:
      NAME:        key_value_input
      QUERY:       |
        SELECT 'k1' as key, 'v1' as value
        UNION ALL
        SELECT 'k2' as key, 'v2' as value;

  - MAP:
      NAME:        perl_single
      MODE:        SINGLE
      PARAMETERS: [key text, value text]
      RETURNS:    [key text, value text]
      LANGUAGE:    perl
      FUNCTION: |
        my ($key, $value) = @_;
        return {'key' => $key, 'value' => $value}

  - MAP:
      NAME:        perl_multi
      MODE:        MULTI
      PARAMETERS: [key text, value text]
      RETURNS:    [key text, value text]
      LANGUAGE:    perl
      FUNCTION: |
        my ($key, $value) = @_;
        for my $i (0..10) {
          return_next {'key' => $key, 'value' => $value}
        }
        return undef

  - MAP:
      NAME:        python_single
      MODE:        SINGLE
      PARAMETERS: [key text, value text]
      RETURNS:    [key text, value text]
      LANGUAGE:    python
      FUNCTION: |
        return {'key': key, 'value': value}

  - MAP:
      NAME:        python_multi
      MODE:        MULTI
      PARAMETERS: [key text, value text]
      RETURNS:    [key text, value text]
      LANGUAGE:    python
      FUNCTION: |
        try:
            for i in range(0,10):
                yield {'key': key, 'value': value}
        except Exception, e:
            plpy.warning(str(e))

EXECUTE:
  - RUN:
      SOURCE: key_value_input
      MAP:    perl_single

  - RUN:
      SOURCE: key_value_input
      MAP:    perl_multi

  - RUN:
      SOURCE: key_value_input
      MAP:    python_single

  - RUN:
      SOURCE: key_value_input
      MAP:    python_multi