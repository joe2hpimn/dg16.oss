%YAML 1.1
---  
VERSION:   1.0.0.1
DATABASE:  @db_user@
USER:      @db_user@

DEFINE:

# 3) SQL join
#    (Define this first to prove non-yaml dependency checks work)
  - INPUT:
      NAME:   reverse_access_count
      QUERY: |
        SELECT a.key as akey, b.key as bkey, sum(b.value::integer) as value
        FROM   reverse_network a, access_count b
        WHERE  a.key != b.key
        GROUP BY a.key, b.key
  
# 1) Access log
  - INPUT:
      NAME:      weblog
      FILE:      @hostname@:@abs_srcdir@/data/access_log
      DELIMITER: '|'
      
  - OUTPUT:
      NAME:     out_1
      FILE:     @abs_srcdir@/output/join.1
      DELIMITER: '|'
      
  - MAP:
      NAME:     myMap
      LANGUAGE: perl
      PARAMETERS:
        - value text
      RETURNS:
        - key   text
        - value integer
      FUNCTION:     |
        return [] unless ($_[0] =~ m/GET ([^ ?,]+)/);
        return [{"key" => $1, "value" => 1}]

  - TRANSITION:
      NAME:     myTransition
      LANGUAGE: perl
      PARAMETERS:
        - state integer
        - value integer
      RETURNS:
        - value integer
      FUNCTION:     return $_[0] + $_[1];

  - REDUCE:
      NAME:        myReduce
      INITIALIZE:  '0'
      TRANSITION:  myTransition
      CONSOLIDATE: myTransition

  - TASK:
      NAME:     access_count
      SOURCE:   weblog
      MAP:      myMap
      REDUCE:   myReduce

# 2) Network graph
  - INPUT:
      NAME:      network
      FILE:      @hostname@:@abs_srcdir@/data/www.small.dat
      COLUMNS:
        - key   integer
        - value integer
      DELIMITER: '|'

  - MAP:
      NAME:     reverse
      LANGUAGE: python
      PARAMETERS:
        - key   integer
        - value integer
      RETURNS:
        - key   integer
        - value integer
      FUNCTION:     |
        return {'key': value, 'value': key}
      MODE:     SINGLE
        
  - TASK:
      NAME:     reverse_network
      SOURCE:   network
      MAP:      reverse
        
EXECUTE:
  - RUN:
      SOURCE: reverse_access_count
      TARGET: out_1