************************************************************************
ABOUT PL/JAVA IN GREENPLUM DATABASE
************************************************************************

PL/Java is a PostgreSQL language extension that allows you to write custom 
database functions in the Java programming language.

In order to use PL/JAVA in Greenplum Database, you must install JDK 1.6
on every host in your Greenplum Database array.

************************************************************************
PL/JAVA DOCUMENTATION
************************************************************************

PL/Java documentation is provided in the PostgreSQL PL/Java User Guide:

http://cvs.pgfoundry.org/cgi-bin/cvsweb.cgi/pljava/org.postgresql.pljava/docs/userguide.html?rev=1.15

Note that there a few key differences between the implementation of PL/Java
in standard PostgreSQL and Greenplum Database, which are noted here.

******************
FUNCTIONS
******************

The following functions are NOT supported in the Greenplum implementation. 
This is due to differences in the way that the classpath is handled in a 
distributed Greenplum environment.

sqlj.install_jar 
sqlj.replace_jar 
sqlj.remove_jar 
sqlj.get_classpath 
sqlj.set_classpath  

Greenplum uses the pljava_classpath server configuration parameter in 
place of the sqlj.set_classpath function.

******************
SERVER CONFIGURATION PARAMETERS
******************

The following new server configuration parameters are used for
PL/Java in Greenplum Database. These parameters replace the 
pljava.* parameters used in the standard PostgreSQL PL/Java 
implementation:

* pljava_classpath
  A colon (:) separated list of the jar files containing your custom
  Java classes. The jar files listed here must also be installed 
  on all Greenplum hosts in the following location: 
  $GPHOME/lib/postgresql/java/
 
* pljava_statement_cache_size
  Sets the size in KB of the Most Recently Used (MRU)
  cache for prepared statements. 

* pljava_release_lingering_savepoints
  If true, lingering savepoints will be released on function exit. 
  If false, they will be rolled back.
 
* pljava_vmoptions
  Defines the startup options for the Java VM.


***************************************************
INSTALLING AND ENABLING PL/JAVA IN GREENPLUM DATABASE
***************************************************

******************
PREREQUISITES - INSTALL JDK 1.6
******************

To use PL/Java you must have a JDK 1.6 installation on all
Greenplum hosts (master and segments). 

Make sure the JAVA_HOME environment variable is set in the 
environment of the 'gpadmin' user on all Greenplum hosts.        

The Java runtime libraries must be findable by your runtime linker. 
On Linux, this involves adding a configuration file for jdk-1.6.0 in 
/etc/ld.so.conf.d and then running ldconfig. For example (as root):

  # echo "$JAVA_HOME/jre/lib/amd64/server" > /etc/ld.so.conf.d/libjdk-1.6.0_21.conf
  # /sbin/ldconfig

On Solaris, this involves running crle and adding the path for 
the java runtime libraries to the list of linked files. For example:
    
  # crle -64 -c /var/ld/64/ld.config -l /lib/64:/usr/lib/64:/usr/sfw/lib/64:/opt/jdk1.6.0_21/jre/lib/amd64/server

This must be done on all hosts in your Greenplum Database array.

******************
ENABLE PL/JAVA IN GREENPLUM
******************

(Perform the following tasks as the 'gpadmin' user)

1. Copy any custom Java archives (jar files) to $GPHOME/lib/postgresql/java/
   on all Greenplum hosts. For example (using gpscp):
   
    $ gpscp -f gphosts_file myclasses.jar =:/usr/local/greenplum-db/lib/postgresql/java/
 

2. Set the pljava_classpath server configuration parameter in the
   master postgresql.conf file. Note that this parameter must list all 
   of your Java archive files separated by a colon (:).

    $ gpconfig -c pljava_classpath -v \'examples.jar:myclasses.jar\' --masteronly

3. Reload the configuration changes:

    $ gpstop -u  

4. Run the install.sql file. This create the PL/Java language in 
   the specified database(s). Creating the PL/Java language in the 
   template1 database will also enable PL/Java in any new databases 
   you create.

    $ psql template1 -f $GPHOME/share/postgresql/pljava/install.sql
    $ psql mydatabase -f $GPHOME/share/postgresql/pljava/install.sql


5. (optional) Greenplum provides an examples.sql file 
   containing sample PL/Java functions that you can use 
   for testing. Run the commands in this file to create 
   the test functions (which use the Java classes in examples.jar). 
 
    $ psql -f $GPHOME/share/postgresql/pljava/examples.sql
 
   

